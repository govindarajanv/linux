1	start and stop a system service manually	
	-	Install vsftpd and ftp 
	-	start the service manually
	-	check if service is running
	-	try ftp to the localhost
	-	kill the process
2	Start the system service using SYSV init script
	-	verify if it is running
	-	gtp to the local host
	-	kill the process
3	Use systemd to start a service
	-	same steps with systemd
4	Use systemctl to enable a service and check the status
5	
6	Get the basic network configuration information	
	-	Get the IP address, netmask or prefix and the network device.
	-	Get the default route
	-	Get the DNS search list and name server records
7	Create a boot-time configuration of your network interface
	-	Reboot and verify the network connections function.
8	Changing Network Configuration and aliases
	-	Create a runtime configuration change
	-	Create a new network alias and if possible test it.
	-	Set up the address 10.200.45.100/255.255.255.0
	-	If you have a second machine, set up the address 10.200.45.110/255.255.255.0
9	Restore the DHCP configuration
	-	Remove the files and changes to restore the DHCP configuration of your systems.
10	Create an intermittent network issue and prove what is broken
	-	Use this netem command to introduce a network problem on the server (random packet drops).
	-	# tc qdisc add dev lo root netem loss random 40
	-	Prove the problem is random packet drops.
	-	Clean up the tc command to avoid issues in future labs # tc qdisc del dev lo root
11	Prove a service is listening only on localhost
	-	Prove the default SMTP service is only running on localhost.
	-	You may have to start or enable the SMTP service, and install the telnet client for this lab
12	Block traffic to a service with TCP Wrappers and prove it is blocked
	-	
13	Set up SSH key-based authentication
	-	Check the parameter PermitRootLogin is set to yes in the /etc/ssh/sshd_config file. If it is not, set the parameter to yes and restart the sshd server.
	-	Make an SSH key and add it to an SSH agent
	-	Copy the SSH pubkey manually or use ssh-copy-id
14	Change the default username and create a host alias using $HOME/.ssh/config
	-	Edit the file $HOME/.ssh/config with the following contents
	-	Use the OpenSSH client to connect to the new alias
15	Enable key-only root logins in your openssh daemon
	-	
16	Launch the xeyes program on a remote system while displaying it locally.  NOTE: You may have to install the xeyes program.
17	Configure and test the pssh command on the local adapters on your system.  
	-	The pssh or parallel-ssh command will send commands to many machines controlled by a text file as to what machines are used. 
	-	pssh works best with StrictHostKeyChecking=no or previously added fingerprints to the ~/.ssh/knownhosts file. 
	-	The pssh commands are most secure with ssh key copied into the targets authorized keys file.
18	Install VNC server. Use the vncserver command to create a VNC session
	-	
19	Use the SSH tunneling feature of vncviewer.
	-	Connect to a VNC server over SSH.
	-	Kill your VNC server
20	Create a systemd configuration file that will allow two VNC sessions one on port 42 and the other on port 43. The two VNC instances will be for the user student and be encrypted.

	-	Create the systemd configuration file
	-	Re-load the systemd configuration files
	-	Start the VNCservers
	-	Verify the VNC servers are working
	-	Make the VNC servers start at boot time
21	Configure Caching DNS.Before starting this lab, make sure your system time is correct.
22	Create an authoritative forward zone for the example.com domain with the following settings
	-	30 second TTL
	-	www.example.com has the address 192.168.111.45 and the IPv6 address fe80::22c9:d0ff:1ecd:c0ef
	-	foo.example.com has the address 192.168.121.11
	-	bar.example.com has a CNAME pointing to www.example.com
	-	host1.example.com through host100.example.com have the addresses 10.20.45.1 through 10.20.45.100
23	Create a reverse DNS zone for the 10.20.45.0/255.255.255.0 network listed above
	Create an authoritative zone for the 45.20.10.in-addr.arpa domain



